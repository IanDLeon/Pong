*, *::after, *::before {
  box-sizing: border-box;
}

:root { /*--css variables that goes across our entire app--*/
  --hue: 200; /*-- hue is ussing values from 0 to 360 --*/
  --saturation: 8%; /*--We can change the value for it to change the colors that we want to display --*/
  --foreground-color: hsl(var(--hue), var(--saturation), 75%); /*--using hsl lets us use the hue, color staturation and lightness --*/ 
  --background-color: hsl(var(--hue), var(--saturation), 20%);
}

body {
  margin: 0;
  background-color: var(--background-color);
  overflow: hidden;
}

.paddle {
  --position: 50;

  position: absolute;
  background-color: var(--foreground-color); /*-- --*/
  top: calc(var(--position) * 1vh); /*--convert this to a vh value using the calc * 1vh this alows us to change the position in JavaScript --*/
  transform: translateY(-50%);
  width: 1vh;
  height: 10vh;
}

.paddle.left {
  left: 1vw;

}

.paddle.right {
  right: 1vw;
}

.ball {
  --x: 50;
  --y: 50;

  position: absolute;
  background-color: var(--foreground-color);
  left: calc(var(--x) * 1vw);
  top: calc(var(--y) * 1vh);
  transform: translateY(-50%, -50%);
  width: 2.5vh;
  height: 2.5vh;
}

.score {
  display: flex;
  justify-content: center;
  font-weight: bold;
  font-size: 7vh; /*-- font size using 7vh to scale to the screen  --*/
  color: var(--foreground-color);
  font-family:  'Press Start 2P', cursive;
}

/*-- Style score getting every single direct child  --*/

.score > * { /*--This makes one score take half of the screen and the other half is taken by the other score --*/
  flex-grow: 1;
  flex-basis: 0;
  padding: 0 2vh;
  margin: 1vh 0;
  opacity: .5;
}

.score > :first-child { /*--Aligns the scores back together--*/
  text-align: right;
  border-right: .5vh solid var(--foreground-color);
 
}

.button {
  display: inline-block;
  justify-content: center;
  border-radius: 20px;
  font-family:  'Press Start 2P', cursive;
  margin-left: 200px;
  margin-top: 10px;
  background-color: var(--foreground-color);
  color: black;
  
}

